---
layout: post
title:  "RGSoC"
author: cocoagems
categories: RGSoC cocoapods
---

During the summer 2015 we had the amazing opportunity to contribute to CocoaPods while being funded by Rails Girls Summer of Code (RGSoC), as well as being hosted and coached by GitHub. How did this work?

<!-- more -->

## What is Rails Girls Summer of Code?

At the time of applying for the fellowship program we were considering a number of great but also costly bootcamps in San Francisco. This alternative to a bootcamps or internship, if you like, works a little different. It is much up to the fellows to design their own program by firstly find a fellow teammate, finding an open source project to work on as well as coaches, mentors and workspace. RGSoC have been around for three years aiming to bring more diversity into Open Source. During this Summer 16 teams were sponsored globally.

## How we met the team
We officially met the CocoaPods team the weekend before Alt-Conf at Limon, a Peruvian restaurant. When Kyle Fuller, one of our CocoaPods coaches sent us an address and an invite for a dinner party, I totally thought we were dining at someone’s house pot luck style. Wow., CocoaPods members must really enjoy cooking if they are going to host an entire dinner party. The CocoaPods team took up nearly the entire second floor. Although, I'm  not really one to clam up when meeting people, the thought of meeting an entire group, and one that chose our team to work on their Open Source project made me a bit nervous. It was scary at first to go meet 14 different people that might already know each other.To ease the anxiety I remembered that we had already met Kyle Fuller and Samuel Giddins at a cafe in SOMA, and they were pretty friendly. At Limon, we introduced each other, one at a time, and listened to conversations around us. We learned a bit more about dependency managers through conversational CocoaPods. Hearing terms drop when we had only a faint idea what they meant was no deterrent, it was fuel to the curiosity fire. After dinner we walked around the Mission and ended up at an ice cream shop with more vanilla flavors than usually offered. The week we met the CocoaPods team was also the same week we met many other iOS developers here in San Francisco for AltConf, it was the beginning of one of my best

[Add Any Pictures we have of Limon, The Ice Cream Shop/AltConf]


## How we organized the work

The student teacher ratio were pretty much reversed from what a learning environment usually looks like. Us two fellows had 11 dedicated mentors who were willing to spend time to help us throughout the project. Most collaboration with our mentors happened remotely and many of our team members were based in other countries and timezones than our self. Communication often started in one of the three Slack channels from the organizations involved in the project. Longer sessions and pairing were planned in advance.

To schedule sessions with mentors and coaches in different time zones, we used a combination of Google Calendar, Slack, and texts. For screen sharing, we found ScreenHero, Google Hangouts, Blue Jeans, and Skype for communication. Having screen sharing alternatives was necessary since audio, and screen sharing delays are unavoidable. In the same way that tools are unpredictable, so are life events. Flexibility is key. Not enough sleep, double scheduling, conferences, and the cold all happened. Communicating with as much time in advance when something changes,using the calendar religiously and setting alerts to avoid forgetting  sessions and due dates is the way to go as is the ability to quickly reschedule Trello or sessions.

## What we worked on

During the project we worked on a couple of different things. Here are some of the main things we worked on for CocoaPods.

Together with [Boris Bügling](https://twitter.com/neonacho) we paired on creating [cocoapods-label](https://rubygems.org/gems/cocoapods-label), a plugin for CocoaPods that annotates the Podfile with the Pod description. This is great for everyone with short memory that wants to remember what the different pods does in an efficient way. We started working on this while Boris visited San Francisco during AltConf and then we continued working on it remotely, sharing screens. We found that the best time to work on it was during Boris evenings and our mornings since Boris lives in Berlin and it’s about 9 hour time difference. It was great to have Boris guide us through how to create a new plugin, a knowledge we would have use for in the project.

When we applied to work on CocaPods we choose to work on making CocoaPods more modular by creating plugins. During a planning meeting we picked our issues interesting for us to work on.

I (Emma) worked on moving the source code for [cocoapods-search](https://github.com/CocoaPods/cocoapods-search) to its own gem and depend on it from CocoaPods it self. The knowledge of how to create a new plugin came in handy. There is a scaffold for creating plugins for cocoapods that I used. It creates the main structure of files and folders and the rest was pretty much to figure out what code was responsible for search and copy that code to the newly created gem. I ran my local changes with Rake to make sure everything worked as it should. When that was done the tests needed to be moved to the new gem as well. Moving the tests was actually more complicated than moving the source code since the tests required a lot of files in the fixture folder to run the tests.

After working on CocoaPods-label with Boris and Emma, CocoaPods issue #3398 'Extract UI module into its own gem', labeled d1:easy, seemed particularly appealing.
#Add a link to Cork above.
Samuel Giddins, helped me outline the first steps to work on this issue by breaking it down into smaller steps.

(What was the gist of those steps)
(What did I get to work on)
(What part was hard/easy?)

CocoaPods User Interface module is known as CLAide. To extract the module into its own gem,the first step was to create Cork, a new gem.

Getting rid of all CocoaPods specific language and dependencies in
CLAiade/lib/command/banner.rb was the next step.


CP specific syntax was challenging to detect at first since I didn't know CocoaPods well.
Having Samuel Giddin's and Kyle Fuller's help was so crucial at this point.
After, I took Pod::UI Module and extracted needed parts into the new gem.
Writing tests for all of the left over User Interface code was the next step.
For this we used Mocha on Bacon and or RSPEC ( I need to check on this. It's
been a while). After writing tests it was all a matter of debugging, debugging,
and hearing Rubocop and Travis CI telling us to debug more. Getting rid of
some CP dependencies changed the way the code worked together and required that
we change other parts.

Right now I need to
Add Cork as a dependency to CocoaPods and make Pod::UI be a reference to
a subclass of Cork::Board.
What I learned is that some projects take longer than others to work on,
especially when you are new and when the code was written a while ago. The
learning curve for working on Cork was really high but I learned a lot.

## Conclusion

We encourage other open source projects to be a part of [next years RGSoC](http://railsgirlssummerofcode.org/guide/projects/).
